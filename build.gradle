buildscript {
    ext {
        springBootVersion = '2.2.6.RELEASE'
        lombokVersion = '1.18.12'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// keep alphabetical order in groups
plugins {
    // 3rd party
    id "com.github.ben-manes.versions" version "0.28.0"
    id 'io.spring.dependency-management' version "1.0.9.RELEASE"
    id 'org.owasp.dependencycheck' version '5.3.2.1'
    id 'org.springframework.boot' version '2.2.6.RELEASE'

    // core
    id 'checkstyle'
    id 'java'
    id 'pmd'
}

version '1.0'

sourceCompatibility = 1.13

repositories {
    mavenCentral()
}

// keep alphabetical order in groups
dependencies {
    testImplementation 'io.rest-assured:rest-assured:4.2.0'
    testImplementation 'io.rest-assured:xml-path:4.2.0'
    testImplementation 'io.rest-assured:json-path:4.2.0'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.3.3'
    testImplementation 'org.springframework.security:spring-security-test:5.1.4.RELEASE'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit' // excluding JUnit4
        exclude group: 'org.assertj' // to avoid confusion in imports (e.g. assertThat)
        exclude group: 'org.junit.vintage' // to avoid warning when running tests in IJ
    }


    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'org.springframework.security:spring-security-crypto'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    runtimeOnly 'com.h2database:h2:1.4.200'
    runtimeOnly 'io.springfox:springfox-swagger-ui:2.9.2'
    runtimeOnly 'org.postgresql:postgresql:42.2.12'

    //Lombok
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
}

checkstyle {
    configFile file('config/checkstyle.xml')
    toolVersion '8.36'
    showViolations = true
    ignoreFailures = false
    maxWarnings = 0
    maxErrors = 0
}

pmdMain {
    ruleSetFiles = files("config/main-pmd-ruleset.xml")
    ruleSets = []
}

pmdTest {
    ruleSetFiles = files("config/test-pmd-ruleset.xml")
    ruleSets = []
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:all" << "-Xlint:-processing" << "-Werror"
}

test {
    useJUnitPlatform()
}
